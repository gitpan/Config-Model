=head1 NAME

Config::Model::models::LCDd::server - Configuration class LCDd::server

=head1 VERSION

version 1.258

=head1 DESCRIPTION

Configuration classes used by L<Config::Model>

=head1 Elements

=head2 DriverPath

Where can we find the driver modules ?
IMPORTANT: Make sure to change this setting to reflect your
           specific setup! Otherwise LCDd won't be able to find
           the driver modules and will thus not be able to
           function properly.
NOTE: Always place a slash as last character !I<< Optional. Type uniline.  >>

=head2 Driver

Tells the server to load the given drivers. Multiple lines can be given.
The name of the driver is case sensitive and determines the section
where to look for further configuration options of the specific driver
as well as the name of the dynamic driver module to load at runtime.
The latter one can be changed by giving af File= directive in the
driver specific section.

The following drivers are supported:
  bayrad, CFontz, CFontz633, CFontzPacket, curses, CwLnx, ea65,
  EyeboxOne, g15, glcdlib, glk, hd44780, icp_a106, imon, imonlcd,
  IOWarrior, irman, joy, lb216, lcdm001, lcterm, lirc, lis, MD8800,
  mdm166a, ms6931, mtc_s16209x, MtxOrb, mx5000, NoritakeVFD, picolcd,
  pyramid, sed1330, sed1520, serialPOS, serialVFD, shuttleVFD, sli,
  stv5730, svga, t6963, text, tyan, ula200, xosd
{ warn_if_match:"CFontz 633" 
  message="this driver is deprecated, please use CFontzPacket driver with Model=633 instead." 
  load="server Driver=CFontzPacket - CFontzPacket model=633"
}I<< Optional. Type enum. choice: 'bayrad', 'CFontz', 'CFontz633', 'CFontzPacket', 'curses', 'CwLnx', 'ea65', 'EyeboxOne', 'g15', 'glcdlib', 'glk', 'hd44780', 'icp_a106', 'imon', 'imonlcd', 'IOWarrior', 'irman', 'joy', 'lb216', 'lcdm001', 'lcterm', 'lirc', 'lis', 'MD8800', 'mdm166a', 'ms6931', 'mtc_s16209x', 'MtxOrb', 'mx5000', 'NoritakeVFD', 'picolcd', 'pyramid', 'sed1330', 'sed1520', 'serialPOS', 'serialVFD', 'shuttleVFD', 'sli', 'stv5730', 'svga', 't6963', 'text', 'tyan', 'ula200', 'xosd', 'warn_if_match', 'CFontz', '633', 'message', 'this', 'driver', 'is', 'deprecated', 'please', 'use', 'CFontzPacket', 'driver', 'with', 'Model', '633', 'instead', 'load', 'server', 'Driver', 'CFontzPacket', 'CFontzPacket', 'model', '633'.  >>

=head2 Bind

Tells the driver to bind to the given interface. I<< Optional. Type uniline. default: '127.0.0.1'.  >>

=head2 Port

Listen on this specified port; defaults to 13666.I<< Optional. Type integer. default: '13666'.  >>

=head2 ReportLevel

Sets the reporting level; defaults to 2 (warnings and errors only).I<< Optional. Type integer. upstream_default: '2'.  >>

Here are some explanations on the possible values:

=over

=item 0

no report

=item 1

reports errors

=item 2

reports warnings

=item 3

reports info

=back



=head2 ReportToSyslog

Should we report to syslog instead of stderr ? I<< Optional. Type enum. choice: 'yes', 'no'. upstream_default: 'no'.  >>

=head2 User

User to run as.  LCDd will drop its root privileges, if any,
and run as this user instead.I<< Optional. Type uniline. default: 'nobody'.  >>

=head2 Foreground

The server will stay in the foreground if set to true.I<< Optional. Type enum. choice: 'yes', 'no'.  >>

=head2 Hello

Hello message: each entry represents a display line; default: builtin. I<< Optional. Type list of uniline.  >>

=head2 GoodBye

GoodBye message: each entry represents a display line; default: builtin. I<< Optional. Type list of uniline.  >>

=head2 WaitTime

Sets the default time in seconds to displays a screen.I<< Optional. Type integer. default: '5'.  >>

=head2 ServerScreen

If yes, the the serverscreen will be rotated as a usual info screen. If no,
it will be a background screen, only visible when no other screens are
active. The special value 'blank' is similar to no, but only a blank screen
is displayed. I<< Optional. Type enum. choice: 'on', 'off', 'blank'. upstream_default: 'on'.  >>

=head2 Backlight

Set master backlight setting. If set to 'open' a client may control the
backlight for its own screens (only). I<< Optional. Type enum. choice: 'off', 'open', 'on'. upstream_default: 'open'.  >>

=head2 Heartbeat

Set master heartbeat setting. If set to 'open' a client may control the
heartbeat for its own screens (only). I<< Optional. Type enum. choice: 'off', 'open', 'on'. upstream_default: 'open'.  >>

=head2 TitleSpeed

set title scrolling speed I<< Optional. Type integer. upstream_default: '10'.  >>

=head2 ToggleRotateKey

The "...Key=" lines define what the server does with keypresses that
don't go to any client.
These are the defaults:I<< Optional. Type uniline. default: 'Enter'.  >>

=head2 PrevScreenKey

I<< Optional. Type uniline. default: 'Left'.  >>

=head2 NextScreenKey

I<< Optional. Type uniline. default: 'Right'.  >>

=head2 ScrollUpKey

I<< Optional. Type uniline. default: 'Up'.  >>

=head2 ScrollDownKey

I<< Optional. Type uniline. default: 'Down'.  >>

=head1 SEE ALSO

=over

=item *

L<config-edit>

=back

=cut
