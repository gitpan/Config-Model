2010/11/19 16:59:56 New Fstab requested by user
2010/11/19 16:59:56 load model Config/Model/models/Fstab.pl
2010/11/19 16:59:56 Creating class Fstab
2010/11/19 16:59:56 load_backend_class: loading class Config::Model::Backend::Fstab, Config/Model/Backend/Fstab.pm
2010/11/19 16:59:56 Read with Fstab Config::Model::Backend::Fstab::read
2010/11/19 16:59:56 Setting global comment with /etc/fstab: static file system information.  <file system> <mount point>   <type>  <options>       <dump>  <pass>
2010/11/19 16:59:56 Fstab fs id set_properties called with 
2010/11/19 16:59:56 Node Fstab: reset fs property level to normal
2010/11/19 16:59:56 Node Fstab: reset fs property experience to beginner
2010/11/19 16:59:56 New Fstab::FsLine requested by Fstab
2010/11/19 16:59:56 load model Config/Model/models/Fstab/FsLine.pl
2010/11/19 16:59:56 Creating class Fstab::FsLine
2010/11/19 16:59:56 Loading:fs_vfstype=proc fs_spec=proc fs_file=/proc fs_freq=0 fs_passno=0
2010/11/19 16:59:56 _load: called on node 'fs:/proc'
2010/11/19 16:59:56 _load: Executing cmd 'fs_vfstype=proc' on node 'fs:/proc'
2010/11/19 16:59:56 _load instructions: 'fs_vfstype' <undef> <undef> '=' 'proc' <undef>
2010/11/19 16:59:56 Leaf 'fs:/proc fs_vfstype' set_properties called with 'choice','help','mandatory','value_type'
2010/11/19 16:59:56 Node fs:/proc: reset fs_vfstype property level to normal
2010/11/19 16:59:56 Node fs:/proc: reset fs_vfstype property experience to beginner
2010/11/19 16:59:56 fs:/proc fs_vfstype setup_enum_choice with 'auto','davfs','ext2','ext3','swap','proc','iso9660','vfat','usbfs','ignore','nfs','nfs4','none','ignore'
2010/11/19 16:59:56 _load: calling leaf loader on element fs_vfstype
2010/11/19 16:59:56 _load_leaf: action '=' value 'proc'
2010/11/19 16:59:56 _load_value: action '=' value 'proc' check yes
2010/11/19 16:59:56 value store proc, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_spec=proc' on node 'fs:/proc'
2010/11/19 16:59:56 _load instructions: 'fs_spec' <undef> <undef> '=' 'proc' <undef>
2010/11/19 16:59:56 Leaf 'fs:/proc fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/proc: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/proc: reset fs_spec property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/proc fs_spec' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/proc fs_vfstype' with '- fs_vfstype' from object 'fs:/proc fs_spec'
2010/11/19 16:59:56 Config::Model::Value fs:/proc fs_spec is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/proc fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'proc'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'proc'
        };
2010/11/19 16:59:56 compute_bool: eval result: true
2010/11/19 16:59:56 _do_warp found rule for '$f1 eq 'proc'':
$found_rule = {
                'default' => 'proc'
              };
2010/11/19 16:59:56 _do_warp: warp called from '$f1 eq 'proc'' on 'fs:/proc fs_spec' with elements 'f1', warp rule is found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/proc fs_spec' with $found_rule = {
                'default' => 'proc'
              };
2010/11/19 16:59:56 Leaf 'fs:/proc fs_spec' set_properties called with 'default','mandatory','value_type'
2010/11/19 16:59:56 Node fs:/proc: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/proc: reset fs_spec property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/proc fs_spec
2010/11/19 16:59:56 _load: calling leaf loader on element fs_spec
2010/11/19 16:59:56 _load_leaf: action '=' value 'proc'
2010/11/19 16:59:56 _load_value: action '=' value 'proc' check yes
2010/11/19 16:59:56 value store proc, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_file=/proc' on node 'fs:/proc'
2010/11/19 16:59:56 _load instructions: 'fs_file' <undef> <undef> '=' '/proc' <undef>
2010/11/19 16:59:56 Leaf 'fs:/proc fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/proc: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/proc: reset fs_file property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/proc fs_file' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/proc fs_vfstype' with '- fs_vfstype' from object 'fs:/proc fs_file'
2010/11/19 16:59:56 Config::Model::Value fs:/proc fs_file is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/proc fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'proc'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'proc'
        };
2010/11/19 16:59:56 compute_bool: eval result: true
2010/11/19 16:59:56 _do_warp found rule for '$f1 eq 'proc'':
$found_rule = {
                'default' => '/proc'
              };
2010/11/19 16:59:56 _do_warp: warp called from '$f1 eq 'proc'' on 'fs:/proc fs_file' with elements 'f1', warp rule is found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/proc fs_file' with $found_rule = {
                'default' => '/proc'
              };
2010/11/19 16:59:56 Leaf 'fs:/proc fs_file' set_properties called with 'default','mandatory','value_type'
2010/11/19 16:59:56 Node fs:/proc: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/proc: reset fs_file property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/proc fs_file
2010/11/19 16:59:56 _load: calling leaf loader on element fs_file
2010/11/19 16:59:56 _load_leaf: action '=' value '/proc'
2010/11/19 16:59:56 _load_value: action '=' value '/proc' check yes
2010/11/19 16:59:56 value store /proc, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_freq=0' on node 'fs:/proc'
2010/11/19 16:59:56 _load instructions: 'fs_freq' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:/proc fs_freq' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/proc: reset fs_freq property level to normal
2010/11/19 16:59:56 Node fs:/proc: reset fs_freq property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/proc fs_freq
2010/11/19 16:59:56 _load: calling leaf loader on element fs_freq
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_passno=0' on node 'fs:/proc'
2010/11/19 16:59:56 _load instructions: 'fs_passno' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:/proc fs_passno' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/proc: reset fs_passno property level to normal
2010/11/19 16:59:56 Node fs:/proc: reset fs_passno property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/proc fs_passno
2010/11/19 16:59:56 _load: calling leaf loader on element fs_passno
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 fs_type proc options is defaults
2010/11/19 16:59:56 Loading:defaults=1
2010/11/19 16:59:56 fs:/proc fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ]
                       };
2010/11/19 16:59:56 Node fs:/proc: set fs_mntopts property level to hidden
2010/11/19 16:59:56 Node fs:/proc: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/proc fs_mntopts' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/proc fs_vfstype' with '- fs_vfstype' from object 'fs:/proc fs_mntopts'
2010/11/19 16:59:56 Config::Model::WarpedNode fs:/proc fs_mntopts is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/proc fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'proc'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'proc'
        };
2010/11/19 16:59:56 compute_bool: eval result: true
2010/11/19 16:59:56 _do_warp found rule for '$f1 eq 'proc'':
$found_rule = {
                'config_class_name' => 'Fstab::CommonOptions'
              };
2010/11/19 16:59:56 _do_warp: warp called from '$f1 eq 'proc'' on 'fs:/proc fs_mntopts' with elements 'f1', warp rule is found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/proc fs_mntopts' with $found_rule = {
                'config_class_name' => 'Fstab::CommonOptions'
              };
2010/11/19 16:59:56 fs:/proc fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ],
                         'config_class_name' => 'Fstab::CommonOptions'
                       };
2010/11/19 16:59:56 Node fs:/proc: reset fs_mntopts property level to normal
2010/11/19 16:59:56 Node fs:/proc: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 New Fstab::CommonOptions requested by fs:/proc
2010/11/19 16:59:56 load model Config/Model/models/Fstab/CommonOptions.pl
2010/11/19 16:59:56 Creating class Fstab::CommonOptions
2010/11/19 16:59:56 _load: called on node 'fs:/proc fs_mntopts'
2010/11/19 16:59:56 _load: Executing cmd 'defaults=1' on node 'fs:/proc fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'defaults' <undef> <undef> '=' '1' <undef>
2010/11/19 16:59:56 Leaf 'fs:/proc fs_mntopts defaults' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset defaults property level to normal
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset defaults property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element defaults
2010/11/19 16:59:56 _load_leaf: action '=' value '1'
2010/11/19 16:59:56 _load_value: action '=' value '1' check yes
2010/11/19 16:59:56 value store 1, ok '1', check yes
2010/11/19 16:59:56 New Fstab::FsLine requested by Fstab
2010/11/19 16:59:56 Annotation: /dev/sda2       /               ext3    errors=remount-ro 0       1
2010/11/19 16:59:56 Loading:fs_vfstype=ext3 fs_spec=UUID=e255dac7-9cfb-42c8-ad1e-4dd1a8b962cb fs_file=/ fs_freq=0 fs_passno=1
2010/11/19 16:59:56 _load: called on node 'fs:/'
2010/11/19 16:59:56 _load: Executing cmd 'fs_vfstype=ext3' on node 'fs:/'
2010/11/19 16:59:56 _load instructions: 'fs_vfstype' <undef> <undef> '=' 'ext3' <undef>
2010/11/19 16:59:56 Leaf 'fs:/ fs_vfstype' set_properties called with 'choice','help','mandatory','value_type'
2010/11/19 16:59:56 Node fs:/: reset fs_vfstype property level to normal
2010/11/19 16:59:56 Node fs:/: reset fs_vfstype property experience to beginner
2010/11/19 16:59:56 fs:/ fs_vfstype setup_enum_choice with 'auto','davfs','ext2','ext3','swap','proc','iso9660','vfat','usbfs','ignore','nfs','nfs4','none','ignore'
2010/11/19 16:59:56 _load: calling leaf loader on element fs_vfstype
2010/11/19 16:59:56 _load_leaf: action '=' value 'ext3'
2010/11/19 16:59:56 _load_value: action '=' value 'ext3' check yes
2010/11/19 16:59:56 value store ext3, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_spec=UUID=e255dac7-9cfb-42c8-ad1e-4dd1a8b962cb' on node 'fs:/'
2010/11/19 16:59:56 _load instructions: 'fs_spec' <undef> <undef> '=' 'UUID=e255dac7-9cfb-42c8-ad1e-4dd1a8b962cb' <undef>
2010/11/19 16:59:56 Leaf 'fs:/ fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/: reset fs_spec property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/ fs_spec' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/ fs_vfstype' with '- fs_vfstype' from object 'fs:/ fs_spec'
2010/11/19 16:59:56 Config::Model::Value fs:/ fs_spec is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/ fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'ext3'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'ext3'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/ fs_spec' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/ fs_spec' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/ fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/: reset fs_spec property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_spec
2010/11/19 16:59:56 _load_leaf: action '=' value 'UUID=e255dac7-9cfb-42c8-ad1e-4dd1a8b962cb'
2010/11/19 16:59:56 _load_value: action '=' value 'UUID=e255dac7-9cfb-42c8-ad1e-4dd1a8b962cb' check yes
2010/11/19 16:59:56 value store UUID=e255dac7-9cfb-42c8-ad1e-4dd1a8b962cb, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_file=/' on node 'fs:/'
2010/11/19 16:59:56 _load instructions: 'fs_file' <undef> <undef> '=' '/' <undef>
2010/11/19 16:59:56 Leaf 'fs:/ fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/: reset fs_file property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/ fs_file' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/ fs_vfstype' with '- fs_vfstype' from object 'fs:/ fs_file'
2010/11/19 16:59:56 Config::Model::Value fs:/ fs_file is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/ fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'ext3'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'ext3'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'ext3'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/ fs_file' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/ fs_file' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/ fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/: reset fs_file property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_file
2010/11/19 16:59:56 _load_leaf: action '=' value '/'
2010/11/19 16:59:56 _load_value: action '=' value '/' check yes
2010/11/19 16:59:56 value store /, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_freq=0' on node 'fs:/'
2010/11/19 16:59:56 _load instructions: 'fs_freq' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:/ fs_freq' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/: reset fs_freq property level to normal
2010/11/19 16:59:56 Node fs:/: reset fs_freq property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/ fs_freq
2010/11/19 16:59:56 _load: calling leaf loader on element fs_freq
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_passno=1' on node 'fs:/'
2010/11/19 16:59:56 _load instructions: 'fs_passno' <undef> <undef> '=' '1' <undef>
2010/11/19 16:59:56 Leaf 'fs:/ fs_passno' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/: reset fs_passno property level to normal
2010/11/19 16:59:56 Node fs:/: reset fs_passno property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/ fs_passno
2010/11/19 16:59:56 _load: calling leaf loader on element fs_passno
2010/11/19 16:59:56 _load_leaf: action '=' value '1'
2010/11/19 16:59:56 _load_value: action '=' value '1' check yes
2010/11/19 16:59:56 value store 1, ok '1', check yes
2010/11/19 16:59:56 fs_type ext3 options is errors=remount-ro
2010/11/19 16:59:56 Loading:errors=remount-ro
2010/11/19 16:59:56 fs:/ fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ]
                       };
2010/11/19 16:59:56 Node fs:/: set fs_mntopts property level to hidden
2010/11/19 16:59:56 Node fs:/: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/ fs_mntopts' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/ fs_vfstype' with '- fs_vfstype' from object 'fs:/ fs_mntopts'
2010/11/19 16:59:56 Config::Model::WarpedNode fs:/ fs_mntopts is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/ fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'ext3'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'ext3'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'auto''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'ext3'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'vfat''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'ext3'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'ext3'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext3''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'ext3'
        };
2010/11/19 16:59:56 compute_bool: eval result: true
2010/11/19 16:59:56 _do_warp found rule for '$f1 eq 'ext3'':
$found_rule = {
                'config_class_name' => 'Fstab::Ext3FsOpt'
              };
2010/11/19 16:59:56 _do_warp: warp called from '$f1 eq 'ext3'' on 'fs:/ fs_mntopts' with elements 'f1', warp rule is found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/ fs_mntopts' with $found_rule = {
                'config_class_name' => 'Fstab::Ext3FsOpt'
              };
2010/11/19 16:59:56 fs:/ fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ],
                         'config_class_name' => 'Fstab::Ext3FsOpt'
                       };
2010/11/19 16:59:56 Node fs:/: reset fs_mntopts property level to normal
2010/11/19 16:59:56 Node fs:/: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 New Fstab::Ext3FsOpt requested by fs:/
2010/11/19 16:59:56 load model Config/Model/models/Fstab/Ext3FsOpt.pl
2010/11/19 16:59:56 Creating class Fstab::Ext3FsOpt
2010/11/19 16:59:56 load model Config/Model/models/Fstab/Ext2FsOpt.pl
2010/11/19 16:59:56 Creating class Fstab::Ext2FsOpt
2010/11/19 16:59:56 _load: called on node 'fs:/ fs_mntopts'
2010/11/19 16:59:56 _load: Executing cmd 'errors=remount-ro' on node 'fs:/ fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'errors' <undef> <undef> '=' 'remount-ro' <undef>
2010/11/19 16:59:56 Leaf 'fs:/ fs_mntopts errors' set_properties called with 'choice','value_type'
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset errors property level to normal
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset errors property experience to beginner
2010/11/19 16:59:56 fs:/ fs_mntopts errors setup_enum_choice with 'continue','remount-ro','panic'
2010/11/19 16:59:56 _load: calling leaf loader on element errors
2010/11/19 16:59:56 _load_leaf: action '=' value 'remount-ro'
2010/11/19 16:59:56 _load_value: action '=' value 'remount-ro' check yes
2010/11/19 16:59:56 value store remount-ro, ok '1', check yes
2010/11/19 16:59:56 New Fstab::FsLine requested by Fstab
2010/11/19 16:59:56 Annotation: /dev/sda4       /home           ext3    defaults        0       2
2010/11/19 16:59:56 Loading:fs_vfstype=ext3 fs_spec=UUID=18e71d5c-436a-4b88-aa16-308ebfa2eef8 fs_file=/home fs_freq=0 fs_passno=2
2010/11/19 16:59:56 _load: called on node 'fs:/home'
2010/11/19 16:59:56 _load: Executing cmd 'fs_vfstype=ext3' on node 'fs:/home'
2010/11/19 16:59:56 _load instructions: 'fs_vfstype' <undef> <undef> '=' 'ext3' <undef>
2010/11/19 16:59:56 Leaf 'fs:/home fs_vfstype' set_properties called with 'choice','help','mandatory','value_type'
2010/11/19 16:59:56 Node fs:/home: reset fs_vfstype property level to normal
2010/11/19 16:59:56 Node fs:/home: reset fs_vfstype property experience to beginner
2010/11/19 16:59:56 fs:/home fs_vfstype setup_enum_choice with 'auto','davfs','ext2','ext3','swap','proc','iso9660','vfat','usbfs','ignore','nfs','nfs4','none','ignore'
2010/11/19 16:59:56 _load: calling leaf loader on element fs_vfstype
2010/11/19 16:59:56 _load_leaf: action '=' value 'ext3'
2010/11/19 16:59:56 _load_value: action '=' value 'ext3' check yes
2010/11/19 16:59:56 value store ext3, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_spec=UUID=18e71d5c-436a-4b88-aa16-308ebfa2eef8' on node 'fs:/home'
2010/11/19 16:59:56 _load instructions: 'fs_spec' <undef> <undef> '=' 'UUID=18e71d5c-436a-4b88-aa16-308ebfa2eef8' <undef>
2010/11/19 16:59:56 Leaf 'fs:/home fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/home: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/home: reset fs_spec property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/home fs_spec' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/home fs_vfstype' with '- fs_vfstype' from object 'fs:/home fs_spec'
2010/11/19 16:59:56 Config::Model::Value fs:/home fs_spec is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/home fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'ext3'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'ext3'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/home fs_spec' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/home fs_spec' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/home fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/home: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/home: reset fs_spec property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_spec
2010/11/19 16:59:56 _load_leaf: action '=' value 'UUID=18e71d5c-436a-4b88-aa16-308ebfa2eef8'
2010/11/19 16:59:56 _load_value: action '=' value 'UUID=18e71d5c-436a-4b88-aa16-308ebfa2eef8' check yes
2010/11/19 16:59:56 value store UUID=18e71d5c-436a-4b88-aa16-308ebfa2eef8, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_file=/home' on node 'fs:/home'
2010/11/19 16:59:56 _load instructions: 'fs_file' <undef> <undef> '=' '/home' <undef>
2010/11/19 16:59:56 Leaf 'fs:/home fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/home: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/home: reset fs_file property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/home fs_file' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/home fs_vfstype' with '- fs_vfstype' from object 'fs:/home fs_file'
2010/11/19 16:59:56 Config::Model::Value fs:/home fs_file is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/home fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'ext3'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'ext3'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'ext3'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/home fs_file' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/home fs_file' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/home fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/home: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/home: reset fs_file property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_file
2010/11/19 16:59:56 _load_leaf: action '=' value '/home'
2010/11/19 16:59:56 _load_value: action '=' value '/home' check yes
2010/11/19 16:59:56 value store /home, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_freq=0' on node 'fs:/home'
2010/11/19 16:59:56 _load instructions: 'fs_freq' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:/home fs_freq' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/home: reset fs_freq property level to normal
2010/11/19 16:59:56 Node fs:/home: reset fs_freq property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/home fs_freq
2010/11/19 16:59:56 _load: calling leaf loader on element fs_freq
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_passno=2' on node 'fs:/home'
2010/11/19 16:59:56 _load instructions: 'fs_passno' <undef> <undef> '=' '2' <undef>
2010/11/19 16:59:56 Leaf 'fs:/home fs_passno' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/home: reset fs_passno property level to normal
2010/11/19 16:59:56 Node fs:/home: reset fs_passno property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/home fs_passno
2010/11/19 16:59:56 _load: calling leaf loader on element fs_passno
2010/11/19 16:59:56 _load_leaf: action '=' value '2'
2010/11/19 16:59:56 _load_value: action '=' value '2' check yes
2010/11/19 16:59:56 value store 2, ok '1', check yes
2010/11/19 16:59:56 fs_type ext3 options is defaults
2010/11/19 16:59:56 Loading:defaults=1
2010/11/19 16:59:56 fs:/home fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ]
                       };
2010/11/19 16:59:56 Node fs:/home: set fs_mntopts property level to hidden
2010/11/19 16:59:56 Node fs:/home: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/home fs_mntopts' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/home fs_vfstype' with '- fs_vfstype' from object 'fs:/home fs_mntopts'
2010/11/19 16:59:56 Config::Model::WarpedNode fs:/home fs_mntopts is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/home fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'ext3'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'ext3'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'auto''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'ext3'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'vfat''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'ext3'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'ext3'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext3''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'ext3'
        };
2010/11/19 16:59:56 compute_bool: eval result: true
2010/11/19 16:59:56 _do_warp found rule for '$f1 eq 'ext3'':
$found_rule = {
                'config_class_name' => 'Fstab::Ext3FsOpt'
              };
2010/11/19 16:59:56 _do_warp: warp called from '$f1 eq 'ext3'' on 'fs:/home fs_mntopts' with elements 'f1', warp rule is found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/home fs_mntopts' with $found_rule = {
                'config_class_name' => 'Fstab::Ext3FsOpt'
              };
2010/11/19 16:59:56 fs:/home fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ],
                         'config_class_name' => 'Fstab::Ext3FsOpt'
                       };
2010/11/19 16:59:56 Node fs:/home: reset fs_mntopts property level to normal
2010/11/19 16:59:56 Node fs:/home: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 New Fstab::Ext3FsOpt requested by fs:/home
2010/11/19 16:59:56 _load: called on node 'fs:/home fs_mntopts'
2010/11/19 16:59:56 _load: Executing cmd 'defaults=1' on node 'fs:/home fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'defaults' <undef> <undef> '=' '1' <undef>
2010/11/19 16:59:56 Leaf 'fs:/home fs_mntopts defaults' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset defaults property level to normal
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset defaults property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element defaults
2010/11/19 16:59:56 _load_leaf: action '=' value '1'
2010/11/19 16:59:56 _load_value: action '=' value '1' check yes
2010/11/19 16:59:56 value store 1, ok '1', check yes
2010/11/19 16:59:56 New Fstab::FsLine requested by Fstab
2010/11/19 16:59:56 Annotation: /dev/sda3       none            swap    sw              0       0
2010/11/19 16:59:56 Loading:fs_vfstype=swap fs_spec=UUID=9988aeba-6937-4da3-8fd3-0fa696266137 fs_file=none fs_freq=0 fs_passno=0
2010/11/19 16:59:56 _load: called on node 'fs:swap-on-0fa696266137'
2010/11/19 16:59:56 _load: Executing cmd 'fs_vfstype=swap' on node 'fs:swap-on-0fa696266137'
2010/11/19 16:59:56 _load instructions: 'fs_vfstype' <undef> <undef> '=' 'swap' <undef>
2010/11/19 16:59:56 Leaf 'fs:swap-on-0fa696266137 fs_vfstype' set_properties called with 'choice','help','mandatory','value_type'
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_vfstype property level to normal
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_vfstype property experience to beginner
2010/11/19 16:59:56 fs:swap-on-0fa696266137 fs_vfstype setup_enum_choice with 'auto','davfs','ext2','ext3','swap','proc','iso9660','vfat','usbfs','ignore','nfs','nfs4','none','ignore'
2010/11/19 16:59:56 _load: calling leaf loader on element fs_vfstype
2010/11/19 16:59:56 _load_leaf: action '=' value 'swap'
2010/11/19 16:59:56 _load_value: action '=' value 'swap' check yes
2010/11/19 16:59:56 value store swap, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_spec=UUID=9988aeba-6937-4da3-8fd3-0fa696266137' on node 'fs:swap-on-0fa696266137'
2010/11/19 16:59:56 _load instructions: 'fs_spec' <undef> <undef> '=' 'UUID=9988aeba-6937-4da3-8fd3-0fa696266137' <undef>
2010/11/19 16:59:56 Leaf 'fs:swap-on-0fa696266137 fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_spec property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:swap-on-0fa696266137 fs_spec' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:swap-on-0fa696266137 fs_vfstype' with '- fs_vfstype' from object 'fs:swap-on-0fa696266137 fs_spec'
2010/11/19 16:59:56 Config::Model::Value fs:swap-on-0fa696266137 fs_spec is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:swap-on-0fa696266137 fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'swap'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'swap'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:swap-on-0fa696266137 fs_spec' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:swap-on-0fa696266137 fs_spec' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:swap-on-0fa696266137 fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_spec property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_spec
2010/11/19 16:59:56 _load_leaf: action '=' value 'UUID=9988aeba-6937-4da3-8fd3-0fa696266137'
2010/11/19 16:59:56 _load_value: action '=' value 'UUID=9988aeba-6937-4da3-8fd3-0fa696266137' check yes
2010/11/19 16:59:56 value store UUID=9988aeba-6937-4da3-8fd3-0fa696266137, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_file=none' on node 'fs:swap-on-0fa696266137'
2010/11/19 16:59:56 _load instructions: 'fs_file' <undef> <undef> '=' 'none' <undef>
2010/11/19 16:59:56 Leaf 'fs:swap-on-0fa696266137 fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_file property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:swap-on-0fa696266137 fs_file' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:swap-on-0fa696266137 fs_vfstype' with '- fs_vfstype' from object 'fs:swap-on-0fa696266137 fs_file'
2010/11/19 16:59:56 Config::Model::Value fs:swap-on-0fa696266137 fs_file is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:swap-on-0fa696266137 fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'swap'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'swap'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'swap'
        };
2010/11/19 16:59:56 compute_bool: eval result: true
2010/11/19 16:59:56 _do_warp found rule for '$f1 eq 'swap'':
$found_rule = {
                'default' => 'none'
              };
2010/11/19 16:59:56 _do_warp: warp called from '$f1 eq 'swap'' on 'fs:swap-on-0fa696266137 fs_file' with elements 'f1', warp rule is found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:swap-on-0fa696266137 fs_file' with $found_rule = {
                'default' => 'none'
              };
2010/11/19 16:59:56 Leaf 'fs:swap-on-0fa696266137 fs_file' set_properties called with 'default','mandatory','value_type'
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_file property experience to beginner
2010/11/19 16:59:56 Set default value for fs:swap-on-0fa696266137 fs_file
2010/11/19 16:59:56 _load: calling leaf loader on element fs_file
2010/11/19 16:59:56 _load_leaf: action '=' value 'none'
2010/11/19 16:59:56 _load_value: action '=' value 'none' check yes
2010/11/19 16:59:56 value store none, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_freq=0' on node 'fs:swap-on-0fa696266137'
2010/11/19 16:59:56 _load instructions: 'fs_freq' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:swap-on-0fa696266137 fs_freq' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_freq property level to normal
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_freq property experience to beginner
2010/11/19 16:59:56 Set default value for fs:swap-on-0fa696266137 fs_freq
2010/11/19 16:59:56 _load: calling leaf loader on element fs_freq
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_passno=0' on node 'fs:swap-on-0fa696266137'
2010/11/19 16:59:56 _load instructions: 'fs_passno' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:swap-on-0fa696266137 fs_passno' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_passno property level to normal
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_passno property experience to beginner
2010/11/19 16:59:56 Set default value for fs:swap-on-0fa696266137 fs_passno
2010/11/19 16:59:56 _load: calling leaf loader on element fs_passno
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 fs_type swap options is sw
2010/11/19 16:59:56 Loading:sw=1
2010/11/19 16:59:56 fs:swap-on-0fa696266137 fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ]
                       };
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: set fs_mntopts property level to hidden
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:swap-on-0fa696266137 fs_mntopts' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:swap-on-0fa696266137 fs_vfstype' with '- fs_vfstype' from object 'fs:swap-on-0fa696266137 fs_mntopts'
2010/11/19 16:59:56 Config::Model::WarpedNode fs:swap-on-0fa696266137 fs_mntopts is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:swap-on-0fa696266137 fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'swap'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'swap'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'auto''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'swap'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'vfat''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'swap'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'swap'
        };
2010/11/19 16:59:56 compute_bool: eval result: true
2010/11/19 16:59:56 _do_warp found rule for '$f1 eq 'swap'':
$found_rule = {
                'config_class_name' => 'Fstab::SwapOptions'
              };
2010/11/19 16:59:56 _do_warp: warp called from '$f1 eq 'swap'' on 'fs:swap-on-0fa696266137 fs_mntopts' with elements 'f1', warp rule is found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:swap-on-0fa696266137 fs_mntopts' with $found_rule = {
                'config_class_name' => 'Fstab::SwapOptions'
              };
2010/11/19 16:59:56 fs:swap-on-0fa696266137 fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ],
                         'config_class_name' => 'Fstab::SwapOptions'
                       };
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_mntopts property level to normal
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 New Fstab::SwapOptions requested by fs:swap-on-0fa696266137
2010/11/19 16:59:56 load model Config/Model/models/Fstab/SwapOptions.pl
2010/11/19 16:59:56 Creating class Fstab::SwapOptions
2010/11/19 16:59:56 _load: called on node 'fs:swap-on-0fa696266137 fs_mntopts'
2010/11/19 16:59:56 _load: Executing cmd 'sw=1' on node 'fs:swap-on-0fa696266137 fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'sw' <undef> <undef> '=' '1' <undef>
2010/11/19 16:59:56 Leaf 'fs:swap-on-0fa696266137 fs_mntopts sw' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137 fs_mntopts: reset sw property level to normal
2010/11/19 16:59:56 Node fs:swap-on-0fa696266137 fs_mntopts: reset sw property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element sw
2010/11/19 16:59:56 _load_leaf: action '=' value '1'
2010/11/19 16:59:56 _load_value: action '=' value '1' check yes
2010/11/19 16:59:56 value store 1, ok '1', check yes
2010/11/19 16:59:56 New Fstab::FsLine requested by Fstab
2010/11/19 16:59:56 Loading:fs_vfstype=nfs fs_spec=gandalf:/home/ fs_file=/mnt/gandalf-home fs_freq=0 fs_passno=2
2010/11/19 16:59:56 _load: called on node 'fs:/mnt/gandalf-home'
2010/11/19 16:59:56 _load: Executing cmd 'fs_vfstype=nfs' on node 'fs:/mnt/gandalf-home'
2010/11/19 16:59:56 _load instructions: 'fs_vfstype' <undef> <undef> '=' 'nfs' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_vfstype' set_properties called with 'choice','help','mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_vfstype property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_vfstype property experience to beginner
2010/11/19 16:59:56 fs:/mnt/gandalf-home fs_vfstype setup_enum_choice with 'auto','davfs','ext2','ext3','swap','proc','iso9660','vfat','usbfs','ignore','nfs','nfs4','none','ignore'
2010/11/19 16:59:56 _load: calling leaf loader on element fs_vfstype
2010/11/19 16:59:56 _load_leaf: action '=' value 'nfs'
2010/11/19 16:59:56 _load_value: action '=' value 'nfs' check yes
2010/11/19 16:59:56 value store nfs, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_spec=gandalf:/home/' on node 'fs:/mnt/gandalf-home'
2010/11/19 16:59:56 _load instructions: 'fs_spec' <undef> <undef> '=' 'gandalf:/home/' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_spec property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/mnt/gandalf-home fs_spec' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/mnt/gandalf-home fs_vfstype' with '- fs_vfstype' from object 'fs:/mnt/gandalf-home fs_spec'
2010/11/19 16:59:56 Config::Model::Value fs:/mnt/gandalf-home fs_spec is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/mnt/gandalf-home fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'nfs'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/mnt/gandalf-home fs_spec' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/mnt/gandalf-home fs_spec' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_spec property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_spec
2010/11/19 16:59:56 _load_leaf: action '=' value 'gandalf:/home/'
2010/11/19 16:59:56 _load_value: action '=' value 'gandalf:/home/' check yes
2010/11/19 16:59:56 value store gandalf:/home/, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_file=/mnt/gandalf-home' on node 'fs:/mnt/gandalf-home'
2010/11/19 16:59:56 _load instructions: 'fs_file' <undef> <undef> '=' '/mnt/gandalf-home' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_file property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/mnt/gandalf-home fs_file' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/mnt/gandalf-home fs_vfstype' with '- fs_vfstype' from object 'fs:/mnt/gandalf-home fs_file'
2010/11/19 16:59:56 Config::Model::Value fs:/mnt/gandalf-home fs_file is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/mnt/gandalf-home fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'nfs'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/mnt/gandalf-home fs_file' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/mnt/gandalf-home fs_file' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_file property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_file
2010/11/19 16:59:56 _load_leaf: action '=' value '/mnt/gandalf-home'
2010/11/19 16:59:56 _load_value: action '=' value '/mnt/gandalf-home' check yes
2010/11/19 16:59:56 value store /mnt/gandalf-home, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_freq=0' on node 'fs:/mnt/gandalf-home'
2010/11/19 16:59:56 _load instructions: 'fs_freq' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_freq' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_freq property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_freq property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/mnt/gandalf-home fs_freq
2010/11/19 16:59:56 _load: calling leaf loader on element fs_freq
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_passno=2' on node 'fs:/mnt/gandalf-home'
2010/11/19 16:59:56 _load instructions: 'fs_passno' <undef> <undef> '=' '2' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_passno' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_passno property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_passno property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/mnt/gandalf-home fs_passno
2010/11/19 16:59:56 _load: calling leaf loader on element fs_passno
2010/11/19 16:59:56 _load_leaf: action '=' value '2'
2010/11/19 16:59:56 _load_value: action '=' value '2' check yes
2010/11/19 16:59:56 value store 2, ok '1', check yes
2010/11/19 16:59:56 fs_type nfs options is user,noauto,rw
2010/11/19 16:59:56 Loading:user=1 auto=0 rw=1
2010/11/19 16:59:56 fs:/mnt/gandalf-home fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ]
                       };
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: set fs_mntopts property level to hidden
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/mnt/gandalf-home fs_mntopts' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/mnt/gandalf-home fs_vfstype' with '- fs_vfstype' from object 'fs:/mnt/gandalf-home fs_mntopts'
2010/11/19 16:59:56 Config::Model::WarpedNode fs:/mnt/gandalf-home fs_mntopts is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/mnt/gandalf-home fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'nfs'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'auto''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'vfat''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext3''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'usbfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'davfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'iso9660''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext2''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'nfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: true
2010/11/19 16:59:56 _do_warp found rule for '$f1 eq 'nfs'':
$found_rule = {
                'config_class_name' => 'Fstab::CommonOptions'
              };
2010/11/19 16:59:56 _do_warp: warp called from '$f1 eq 'nfs'' on 'fs:/mnt/gandalf-home fs_mntopts' with elements 'f1', warp rule is found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/mnt/gandalf-home fs_mntopts' with $found_rule = {
                'config_class_name' => 'Fstab::CommonOptions'
              };
2010/11/19 16:59:56 fs:/mnt/gandalf-home fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ],
                         'config_class_name' => 'Fstab::CommonOptions'
                       };
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_mntopts property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 New Fstab::CommonOptions requested by fs:/mnt/gandalf-home
2010/11/19 16:59:56 _load: called on node 'fs:/mnt/gandalf-home fs_mntopts'
2010/11/19 16:59:56 _load: Executing cmd 'user=1' on node 'fs:/mnt/gandalf-home fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'user' <undef> <undef> '=' '1' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_mntopts user' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset user property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset user property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element user
2010/11/19 16:59:56 _load_leaf: action '=' value '1'
2010/11/19 16:59:56 _load_value: action '=' value '1' check yes
2010/11/19 16:59:56 value store 1, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'auto=0' on node 'fs:/mnt/gandalf-home fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'auto' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_mntopts auto' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset auto property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset auto property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element auto
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'rw=1' on node 'fs:/mnt/gandalf-home fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'rw' <undef> <undef> '=' '1' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_mntopts rw' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset rw property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset rw property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element rw
2010/11/19 16:59:56 _load_leaf: action '=' value '1'
2010/11/19 16:59:56 _load_value: action '=' value '1' check yes
2010/11/19 16:59:56 value store 1, ok '1', check yes
2010/11/19 16:59:56 New Fstab::FsLine requested by Fstab
2010/11/19 16:59:56 Loading:fs_vfstype=nfs fs_spec=gandalf:/mnt/video/ fs_file=/mnt/video fs_freq=0 fs_passno=2
2010/11/19 16:59:56 _load: called on node 'fs:/mnt/video'
2010/11/19 16:59:56 _load: Executing cmd 'fs_vfstype=nfs' on node 'fs:/mnt/video'
2010/11/19 16:59:56 _load instructions: 'fs_vfstype' <undef> <undef> '=' 'nfs' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_vfstype' set_properties called with 'choice','help','mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_vfstype property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_vfstype property experience to beginner
2010/11/19 16:59:56 fs:/mnt/video fs_vfstype setup_enum_choice with 'auto','davfs','ext2','ext3','swap','proc','iso9660','vfat','usbfs','ignore','nfs','nfs4','none','ignore'
2010/11/19 16:59:56 _load: calling leaf loader on element fs_vfstype
2010/11/19 16:59:56 _load_leaf: action '=' value 'nfs'
2010/11/19 16:59:56 _load_value: action '=' value 'nfs' check yes
2010/11/19 16:59:56 value store nfs, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_spec=gandalf:/mnt/video/' on node 'fs:/mnt/video'
2010/11/19 16:59:56 _load instructions: 'fs_spec' <undef> <undef> '=' 'gandalf:/mnt/video/' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_spec property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/mnt/video fs_spec' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/mnt/video fs_vfstype' with '- fs_vfstype' from object 'fs:/mnt/video fs_spec'
2010/11/19 16:59:56 Config::Model::Value fs:/mnt/video fs_spec is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/mnt/video fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'nfs'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/mnt/video fs_spec' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/mnt/video fs_spec' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_spec property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_spec
2010/11/19 16:59:56 _load_leaf: action '=' value 'gandalf:/mnt/video/'
2010/11/19 16:59:56 _load_value: action '=' value 'gandalf:/mnt/video/' check yes
2010/11/19 16:59:56 value store gandalf:/mnt/video/, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_file=/mnt/video' on node 'fs:/mnt/video'
2010/11/19 16:59:56 _load instructions: 'fs_file' <undef> <undef> '=' '/mnt/video' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_file property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/mnt/video fs_file' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/mnt/video fs_vfstype' with '- fs_vfstype' from object 'fs:/mnt/video fs_file'
2010/11/19 16:59:56 Config::Model::Value fs:/mnt/video fs_file is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/mnt/video fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'nfs'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/mnt/video fs_file' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/mnt/video fs_file' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_file property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_file
2010/11/19 16:59:56 _load_leaf: action '=' value '/mnt/video'
2010/11/19 16:59:56 _load_value: action '=' value '/mnt/video' check yes
2010/11/19 16:59:56 value store /mnt/video, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_freq=0' on node 'fs:/mnt/video'
2010/11/19 16:59:56 _load instructions: 'fs_freq' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_freq' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_freq property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_freq property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/mnt/video fs_freq
2010/11/19 16:59:56 _load: calling leaf loader on element fs_freq
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_passno=2' on node 'fs:/mnt/video'
2010/11/19 16:59:56 _load instructions: 'fs_passno' <undef> <undef> '=' '2' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_passno' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_passno property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_passno property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/mnt/video fs_passno
2010/11/19 16:59:56 _load: calling leaf loader on element fs_passno
2010/11/19 16:59:56 _load_leaf: action '=' value '2'
2010/11/19 16:59:56 _load_value: action '=' value '2' check yes
2010/11/19 16:59:56 value store 2, ok '1', check yes
2010/11/19 16:59:56 fs_type nfs options is user,noauto,rw
2010/11/19 16:59:56 Loading:user=1 auto=0 rw=1
2010/11/19 16:59:56 fs:/mnt/video fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ]
                       };
2010/11/19 16:59:56 Node fs:/mnt/video: set fs_mntopts property level to hidden
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/mnt/video fs_mntopts' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/mnt/video fs_vfstype' with '- fs_vfstype' from object 'fs:/mnt/video fs_mntopts'
2010/11/19 16:59:56 Config::Model::WarpedNode fs:/mnt/video fs_mntopts is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/mnt/video fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'nfs'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'auto''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'vfat''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext3''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'usbfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'davfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'iso9660''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext2''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'nfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: true
2010/11/19 16:59:56 _do_warp found rule for '$f1 eq 'nfs'':
$found_rule = {
                'config_class_name' => 'Fstab::CommonOptions'
              };
2010/11/19 16:59:56 _do_warp: warp called from '$f1 eq 'nfs'' on 'fs:/mnt/video fs_mntopts' with elements 'f1', warp rule is found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/mnt/video fs_mntopts' with $found_rule = {
                'config_class_name' => 'Fstab::CommonOptions'
              };
2010/11/19 16:59:56 fs:/mnt/video fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ],
                         'config_class_name' => 'Fstab::CommonOptions'
                       };
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_mntopts property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 New Fstab::CommonOptions requested by fs:/mnt/video
2010/11/19 16:59:56 _load: called on node 'fs:/mnt/video fs_mntopts'
2010/11/19 16:59:56 _load: Executing cmd 'user=1' on node 'fs:/mnt/video fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'user' <undef> <undef> '=' '1' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_mntopts user' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset user property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset user property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element user
2010/11/19 16:59:56 _load_leaf: action '=' value '1'
2010/11/19 16:59:56 _load_value: action '=' value '1' check yes
2010/11/19 16:59:56 value store 1, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'auto=0' on node 'fs:/mnt/video fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'auto' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_mntopts auto' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset auto property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset auto property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element auto
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'rw=1' on node 'fs:/mnt/video fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'rw' <undef> <undef> '=' '1' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_mntopts rw' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset rw property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset rw property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element rw
2010/11/19 16:59:56 _load_leaf: action '=' value '1'
2010/11/19 16:59:56 _load_value: action '=' value '1' check yes
2010/11/19 16:59:56 value store 1, ok '1', check yes
2010/11/19 16:59:56 New Fstab::FsLine requested by Fstab
2010/11/19 16:59:56 Loading:fs_vfstype=nfs fs_spec=gandalf:/mnt/video3/ fs_file=/mnt/video3 fs_freq=0 fs_passno=2
2010/11/19 16:59:56 _load: called on node 'fs:/mnt/video3'
2010/11/19 16:59:56 _load: Executing cmd 'fs_vfstype=nfs' on node 'fs:/mnt/video3'
2010/11/19 16:59:56 _load instructions: 'fs_vfstype' <undef> <undef> '=' 'nfs' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_vfstype' set_properties called with 'choice','help','mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_vfstype property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_vfstype property experience to beginner
2010/11/19 16:59:56 fs:/mnt/video3 fs_vfstype setup_enum_choice with 'auto','davfs','ext2','ext3','swap','proc','iso9660','vfat','usbfs','ignore','nfs','nfs4','none','ignore'
2010/11/19 16:59:56 _load: calling leaf loader on element fs_vfstype
2010/11/19 16:59:56 _load_leaf: action '=' value 'nfs'
2010/11/19 16:59:56 _load_value: action '=' value 'nfs' check yes
2010/11/19 16:59:56 value store nfs, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_spec=gandalf:/mnt/video3/' on node 'fs:/mnt/video3'
2010/11/19 16:59:56 _load instructions: 'fs_spec' <undef> <undef> '=' 'gandalf:/mnt/video3/' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_spec property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/mnt/video3 fs_spec' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/mnt/video3 fs_vfstype' with '- fs_vfstype' from object 'fs:/mnt/video3 fs_spec'
2010/11/19 16:59:56 Config::Model::Value fs:/mnt/video3 fs_spec is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/mnt/video3 fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'nfs'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/mnt/video3 fs_spec' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/mnt/video3 fs_spec' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_spec property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_spec
2010/11/19 16:59:56 _load_leaf: action '=' value 'gandalf:/mnt/video3/'
2010/11/19 16:59:56 _load_value: action '=' value 'gandalf:/mnt/video3/' check yes
2010/11/19 16:59:56 value store gandalf:/mnt/video3/, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_file=/mnt/video3' on node 'fs:/mnt/video3'
2010/11/19 16:59:56 _load instructions: 'fs_file' <undef> <undef> '=' '/mnt/video3' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_file property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/mnt/video3 fs_file' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/mnt/video3 fs_vfstype' with '- fs_vfstype' from object 'fs:/mnt/video3 fs_file'
2010/11/19 16:59:56 Config::Model::Value fs:/mnt/video3 fs_file is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/mnt/video3 fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'nfs'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/mnt/video3 fs_file' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/mnt/video3 fs_file' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_file property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_file
2010/11/19 16:59:56 _load_leaf: action '=' value '/mnt/video3'
2010/11/19 16:59:56 _load_value: action '=' value '/mnt/video3' check yes
2010/11/19 16:59:56 value store /mnt/video3, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_freq=0' on node 'fs:/mnt/video3'
2010/11/19 16:59:56 _load instructions: 'fs_freq' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_freq' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_freq property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_freq property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/mnt/video3 fs_freq
2010/11/19 16:59:56 _load: calling leaf loader on element fs_freq
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_passno=2' on node 'fs:/mnt/video3'
2010/11/19 16:59:56 _load instructions: 'fs_passno' <undef> <undef> '=' '2' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_passno' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_passno property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_passno property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/mnt/video3 fs_passno
2010/11/19 16:59:56 _load: calling leaf loader on element fs_passno
2010/11/19 16:59:56 _load_leaf: action '=' value '2'
2010/11/19 16:59:56 _load_value: action '=' value '2' check yes
2010/11/19 16:59:56 value store 2, ok '1', check yes
2010/11/19 16:59:56 fs_type nfs options is user,noauto,rw
2010/11/19 16:59:56 Loading:user=1 auto=0 rw=1
2010/11/19 16:59:56 fs:/mnt/video3 fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ]
                       };
2010/11/19 16:59:56 Node fs:/mnt/video3: set fs_mntopts property level to hidden
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/mnt/video3 fs_mntopts' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/mnt/video3 fs_vfstype' with '- fs_vfstype' from object 'fs:/mnt/video3 fs_mntopts'
2010/11/19 16:59:56 Config::Model::WarpedNode fs:/mnt/video3 fs_mntopts is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/mnt/video3 fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'nfs'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'auto''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'vfat''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext3''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'usbfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'davfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'iso9660''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext2''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'nfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: true
2010/11/19 16:59:56 _do_warp found rule for '$f1 eq 'nfs'':
$found_rule = {
                'config_class_name' => 'Fstab::CommonOptions'
              };
2010/11/19 16:59:56 _do_warp: warp called from '$f1 eq 'nfs'' on 'fs:/mnt/video3 fs_mntopts' with elements 'f1', warp rule is found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/mnt/video3 fs_mntopts' with $found_rule = {
                'config_class_name' => 'Fstab::CommonOptions'
              };
2010/11/19 16:59:56 fs:/mnt/video3 fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ],
                         'config_class_name' => 'Fstab::CommonOptions'
                       };
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_mntopts property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 New Fstab::CommonOptions requested by fs:/mnt/video3
2010/11/19 16:59:56 _load: called on node 'fs:/mnt/video3 fs_mntopts'
2010/11/19 16:59:56 _load: Executing cmd 'user=1' on node 'fs:/mnt/video3 fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'user' <undef> <undef> '=' '1' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_mntopts user' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset user property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset user property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element user
2010/11/19 16:59:56 _load_leaf: action '=' value '1'
2010/11/19 16:59:56 _load_value: action '=' value '1' check yes
2010/11/19 16:59:56 value store 1, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'auto=0' on node 'fs:/mnt/video3 fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'auto' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_mntopts auto' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset auto property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset auto property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element auto
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'rw=1' on node 'fs:/mnt/video3 fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'rw' <undef> <undef> '=' '1' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_mntopts rw' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset rw property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset rw property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element rw
2010/11/19 16:59:56 _load_leaf: action '=' value '1'
2010/11/19 16:59:56 _load_value: action '=' value '1' check yes
2010/11/19 16:59:56 value store 1, ok '1', check yes
2010/11/19 16:59:56 New Fstab::FsLine requested by Fstab
2010/11/19 16:59:56 Loading:fs_vfstype=nfs fs_spec=gandalf:/mnt/video4/ fs_file=/mnt/video4 fs_freq=0 fs_passno=2
2010/11/19 16:59:56 _load: called on node 'fs:/mnt/video4'
2010/11/19 16:59:56 _load: Executing cmd 'fs_vfstype=nfs' on node 'fs:/mnt/video4'
2010/11/19 16:59:56 _load instructions: 'fs_vfstype' <undef> <undef> '=' 'nfs' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_vfstype' set_properties called with 'choice','help','mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_vfstype property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_vfstype property experience to beginner
2010/11/19 16:59:56 fs:/mnt/video4 fs_vfstype setup_enum_choice with 'auto','davfs','ext2','ext3','swap','proc','iso9660','vfat','usbfs','ignore','nfs','nfs4','none','ignore'
2010/11/19 16:59:56 _load: calling leaf loader on element fs_vfstype
2010/11/19 16:59:56 _load_leaf: action '=' value 'nfs'
2010/11/19 16:59:56 _load_value: action '=' value 'nfs' check yes
2010/11/19 16:59:56 value store nfs, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_spec=gandalf:/mnt/video4/' on node 'fs:/mnt/video4'
2010/11/19 16:59:56 _load instructions: 'fs_spec' <undef> <undef> '=' 'gandalf:/mnt/video4/' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_spec property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/mnt/video4 fs_spec' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/mnt/video4 fs_vfstype' with '- fs_vfstype' from object 'fs:/mnt/video4 fs_spec'
2010/11/19 16:59:56 Config::Model::Value fs:/mnt/video4 fs_spec is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/mnt/video4 fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'nfs'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/mnt/video4 fs_spec' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/mnt/video4 fs_spec' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_spec property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_spec
2010/11/19 16:59:56 _load_leaf: action '=' value 'gandalf:/mnt/video4/'
2010/11/19 16:59:56 _load_value: action '=' value 'gandalf:/mnt/video4/' check yes
2010/11/19 16:59:56 value store gandalf:/mnt/video4/, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_file=/mnt/video4' on node 'fs:/mnt/video4'
2010/11/19 16:59:56 _load instructions: 'fs_file' <undef> <undef> '=' '/mnt/video4' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_file property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/mnt/video4 fs_file' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/mnt/video4 fs_vfstype' with '- fs_vfstype' from object 'fs:/mnt/video4 fs_file'
2010/11/19 16:59:56 Config::Model::Value fs:/mnt/video4 fs_file is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/mnt/video4 fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'nfs'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/mnt/video4 fs_file' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/mnt/video4 fs_file' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_file property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_file
2010/11/19 16:59:56 _load_leaf: action '=' value '/mnt/video4'
2010/11/19 16:59:56 _load_value: action '=' value '/mnt/video4' check yes
2010/11/19 16:59:56 value store /mnt/video4, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_freq=0' on node 'fs:/mnt/video4'
2010/11/19 16:59:56 _load instructions: 'fs_freq' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_freq' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_freq property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_freq property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/mnt/video4 fs_freq
2010/11/19 16:59:56 _load: calling leaf loader on element fs_freq
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_passno=2' on node 'fs:/mnt/video4'
2010/11/19 16:59:56 _load instructions: 'fs_passno' <undef> <undef> '=' '2' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_passno' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_passno property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_passno property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/mnt/video4 fs_passno
2010/11/19 16:59:56 _load: calling leaf loader on element fs_passno
2010/11/19 16:59:56 _load_leaf: action '=' value '2'
2010/11/19 16:59:56 _load_value: action '=' value '2' check yes
2010/11/19 16:59:56 value store 2, ok '1', check yes
2010/11/19 16:59:56 fs_type nfs options is user,noauto,rw
2010/11/19 16:59:56 Loading:user=1 auto=0 rw=1
2010/11/19 16:59:56 fs:/mnt/video4 fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ]
                       };
2010/11/19 16:59:56 Node fs:/mnt/video4: set fs_mntopts property level to hidden
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/mnt/video4 fs_mntopts' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/mnt/video4 fs_vfstype' with '- fs_vfstype' from object 'fs:/mnt/video4 fs_mntopts'
2010/11/19 16:59:56 Config::Model::WarpedNode fs:/mnt/video4 fs_mntopts is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/mnt/video4 fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'nfs'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'auto''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'vfat''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext3''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'usbfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'davfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'iso9660''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext2''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'nfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'nfs'
        };
2010/11/19 16:59:56 compute_bool: eval result: true
2010/11/19 16:59:56 _do_warp found rule for '$f1 eq 'nfs'':
$found_rule = {
                'config_class_name' => 'Fstab::CommonOptions'
              };
2010/11/19 16:59:56 _do_warp: warp called from '$f1 eq 'nfs'' on 'fs:/mnt/video4 fs_mntopts' with elements 'f1', warp rule is found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/mnt/video4 fs_mntopts' with $found_rule = {
                'config_class_name' => 'Fstab::CommonOptions'
              };
2010/11/19 16:59:56 fs:/mnt/video4 fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ],
                         'config_class_name' => 'Fstab::CommonOptions'
                       };
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_mntopts property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 New Fstab::CommonOptions requested by fs:/mnt/video4
2010/11/19 16:59:56 _load: called on node 'fs:/mnt/video4 fs_mntopts'
2010/11/19 16:59:56 _load: Executing cmd 'user=1' on node 'fs:/mnt/video4 fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'user' <undef> <undef> '=' '1' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_mntopts user' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset user property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset user property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element user
2010/11/19 16:59:56 _load_leaf: action '=' value '1'
2010/11/19 16:59:56 _load_value: action '=' value '1' check yes
2010/11/19 16:59:56 value store 1, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'auto=0' on node 'fs:/mnt/video4 fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'auto' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_mntopts auto' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset auto property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset auto property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element auto
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'rw=1' on node 'fs:/mnt/video4 fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'rw' <undef> <undef> '=' '1' <undef>
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_mntopts rw' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset rw property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset rw property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element rw
2010/11/19 16:59:56 _load_leaf: action '=' value '1'
2010/11/19 16:59:56 _load_value: action '=' value '1' check yes
2010/11/19 16:59:56 value store 1, ok '1', check yes
2010/11/19 16:59:56 New Fstab::FsLine requested by Fstab
2010/11/19 16:59:56 Loading:fs_vfstype=none fs_spec=/dev fs_file=/var/chroot/lenny-i386/dev fs_freq=0 fs_passno=2
2010/11/19 16:59:56 _load: called on node 'fs:/var/chroot/lenny-i386/dev'
2010/11/19 16:59:56 _load: Executing cmd 'fs_vfstype=none' on node 'fs:/var/chroot/lenny-i386/dev'
2010/11/19 16:59:56 _load instructions: 'fs_vfstype' <undef> <undef> '=' 'none' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/dev fs_vfstype' set_properties called with 'choice','help','mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_vfstype property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_vfstype property experience to beginner
2010/11/19 16:59:56 fs:/var/chroot/lenny-i386/dev fs_vfstype setup_enum_choice with 'auto','davfs','ext2','ext3','swap','proc','iso9660','vfat','usbfs','ignore','nfs','nfs4','none','ignore'
2010/11/19 16:59:56 _load: calling leaf loader on element fs_vfstype
2010/11/19 16:59:56 _load_leaf: action '=' value 'none'
2010/11/19 16:59:56 _load_value: action '=' value 'none' check yes
2010/11/19 16:59:56 value store none, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_spec=/dev' on node 'fs:/var/chroot/lenny-i386/dev'
2010/11/19 16:59:56 _load instructions: 'fs_spec' <undef> <undef> '=' '/dev' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/dev fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_spec property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/var/chroot/lenny-i386/dev fs_spec' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/var/chroot/lenny-i386/dev fs_vfstype' with '- fs_vfstype' from object 'fs:/var/chroot/lenny-i386/dev fs_spec'
2010/11/19 16:59:56 Config::Model::Value fs:/var/chroot/lenny-i386/dev fs_spec is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/var/chroot/lenny-i386/dev fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'none'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/var/chroot/lenny-i386/dev fs_spec' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/var/chroot/lenny-i386/dev fs_spec' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/dev fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_spec property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_spec
2010/11/19 16:59:56 _load_leaf: action '=' value '/dev'
2010/11/19 16:59:56 _load_value: action '=' value '/dev' check yes
2010/11/19 16:59:56 value store /dev, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_file=/var/chroot/lenny-i386/dev' on node 'fs:/var/chroot/lenny-i386/dev'
2010/11/19 16:59:56 _load instructions: 'fs_file' <undef> <undef> '=' '/var/chroot/lenny-i386/dev' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/dev fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_file property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/var/chroot/lenny-i386/dev fs_file' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/var/chroot/lenny-i386/dev fs_vfstype' with '- fs_vfstype' from object 'fs:/var/chroot/lenny-i386/dev fs_file'
2010/11/19 16:59:56 Config::Model::Value fs:/var/chroot/lenny-i386/dev fs_file is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/var/chroot/lenny-i386/dev fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'none'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/var/chroot/lenny-i386/dev fs_file' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/var/chroot/lenny-i386/dev fs_file' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/dev fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_file property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_file
2010/11/19 16:59:56 _load_leaf: action '=' value '/var/chroot/lenny-i386/dev'
2010/11/19 16:59:56 _load_value: action '=' value '/var/chroot/lenny-i386/dev' check yes
2010/11/19 16:59:56 value store /var/chroot/lenny-i386/dev, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_freq=0' on node 'fs:/var/chroot/lenny-i386/dev'
2010/11/19 16:59:56 _load instructions: 'fs_freq' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/dev fs_freq' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_freq property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_freq property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/var/chroot/lenny-i386/dev fs_freq
2010/11/19 16:59:56 _load: calling leaf loader on element fs_freq
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_passno=2' on node 'fs:/var/chroot/lenny-i386/dev'
2010/11/19 16:59:56 _load instructions: 'fs_passno' <undef> <undef> '=' '2' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/dev fs_passno' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_passno property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_passno property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/var/chroot/lenny-i386/dev fs_passno
2010/11/19 16:59:56 _load: calling leaf loader on element fs_passno
2010/11/19 16:59:56 _load_leaf: action '=' value '2'
2010/11/19 16:59:56 _load_value: action '=' value '2' check yes
2010/11/19 16:59:56 value store 2, ok '1', check yes
2010/11/19 16:59:56 fs_type none options is bind
2010/11/19 16:59:56 Loading:bind=1
2010/11/19 16:59:56 fs:/var/chroot/lenny-i386/dev fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ]
                       };
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: set fs_mntopts property level to hidden
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/var/chroot/lenny-i386/dev fs_mntopts' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/var/chroot/lenny-i386/dev fs_vfstype' with '- fs_vfstype' from object 'fs:/var/chroot/lenny-i386/dev fs_mntopts'
2010/11/19 16:59:56 Config::Model::WarpedNode fs:/var/chroot/lenny-i386/dev fs_mntopts is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/var/chroot/lenny-i386/dev fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'none'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'auto''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'vfat''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext3''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'usbfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'davfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'iso9660''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext2''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'nfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'nfs4''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'none''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: true
2010/11/19 16:59:56 _do_warp found rule for '$f1 eq 'none'':
$found_rule = {
                'config_class_name' => 'Fstab::NoneOptions'
              };
2010/11/19 16:59:56 _do_warp: warp called from '$f1 eq 'none'' on 'fs:/var/chroot/lenny-i386/dev fs_mntopts' with elements 'f1', warp rule is found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/var/chroot/lenny-i386/dev fs_mntopts' with $found_rule = {
                'config_class_name' => 'Fstab::NoneOptions'
              };
2010/11/19 16:59:56 fs:/var/chroot/lenny-i386/dev fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ],
                         'config_class_name' => 'Fstab::NoneOptions'
                       };
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_mntopts property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 New Fstab::NoneOptions requested by fs:/var/chroot/lenny-i386/dev
2010/11/19 16:59:56 load model Config/Model/models/Fstab/NoneOptions.pl
2010/11/19 16:59:56 Creating class Fstab::NoneOptions
2010/11/19 16:59:56 _load: called on node 'fs:/var/chroot/lenny-i386/dev fs_mntopts'
2010/11/19 16:59:56 _load: Executing cmd 'bind=1' on node 'fs:/var/chroot/lenny-i386/dev fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'bind' <undef> <undef> '=' '1' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/dev fs_mntopts bind' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev fs_mntopts: reset bind property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/dev fs_mntopts: reset bind property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element bind
2010/11/19 16:59:56 _load_leaf: action '=' value '1'
2010/11/19 16:59:56 _load_value: action '=' value '1' check yes
2010/11/19 16:59:56 value store 1, ok '1', check yes
2010/11/19 16:59:56 New Fstab::FsLine requested by Fstab
2010/11/19 16:59:56 Loading:fs_vfstype=none fs_spec=/home fs_file=/var/chroot/lenny-i386/home fs_freq=0 fs_passno=2
2010/11/19 16:59:56 _load: called on node 'fs:/var/chroot/lenny-i386/home'
2010/11/19 16:59:56 _load: Executing cmd 'fs_vfstype=none' on node 'fs:/var/chroot/lenny-i386/home'
2010/11/19 16:59:56 _load instructions: 'fs_vfstype' <undef> <undef> '=' 'none' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/home fs_vfstype' set_properties called with 'choice','help','mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_vfstype property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_vfstype property experience to beginner
2010/11/19 16:59:56 fs:/var/chroot/lenny-i386/home fs_vfstype setup_enum_choice with 'auto','davfs','ext2','ext3','swap','proc','iso9660','vfat','usbfs','ignore','nfs','nfs4','none','ignore'
2010/11/19 16:59:56 _load: calling leaf loader on element fs_vfstype
2010/11/19 16:59:56 _load_leaf: action '=' value 'none'
2010/11/19 16:59:56 _load_value: action '=' value 'none' check yes
2010/11/19 16:59:56 value store none, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_spec=/home' on node 'fs:/var/chroot/lenny-i386/home'
2010/11/19 16:59:56 _load instructions: 'fs_spec' <undef> <undef> '=' '/home' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/home fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_spec property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/var/chroot/lenny-i386/home fs_spec' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/var/chroot/lenny-i386/home fs_vfstype' with '- fs_vfstype' from object 'fs:/var/chroot/lenny-i386/home fs_spec'
2010/11/19 16:59:56 Config::Model::Value fs:/var/chroot/lenny-i386/home fs_spec is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/var/chroot/lenny-i386/home fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'none'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/var/chroot/lenny-i386/home fs_spec' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/var/chroot/lenny-i386/home fs_spec' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/home fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_spec property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_spec
2010/11/19 16:59:56 _load_leaf: action '=' value '/home'
2010/11/19 16:59:56 _load_value: action '=' value '/home' check yes
2010/11/19 16:59:56 value store /home, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_file=/var/chroot/lenny-i386/home' on node 'fs:/var/chroot/lenny-i386/home'
2010/11/19 16:59:56 _load instructions: 'fs_file' <undef> <undef> '=' '/var/chroot/lenny-i386/home' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/home fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_file property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/var/chroot/lenny-i386/home fs_file' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/var/chroot/lenny-i386/home fs_vfstype' with '- fs_vfstype' from object 'fs:/var/chroot/lenny-i386/home fs_file'
2010/11/19 16:59:56 Config::Model::Value fs:/var/chroot/lenny-i386/home fs_file is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/var/chroot/lenny-i386/home fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'none'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/var/chroot/lenny-i386/home fs_file' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/var/chroot/lenny-i386/home fs_file' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/home fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_file property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_file
2010/11/19 16:59:56 _load_leaf: action '=' value '/var/chroot/lenny-i386/home'
2010/11/19 16:59:56 _load_value: action '=' value '/var/chroot/lenny-i386/home' check yes
2010/11/19 16:59:56 value store /var/chroot/lenny-i386/home, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_freq=0' on node 'fs:/var/chroot/lenny-i386/home'
2010/11/19 16:59:56 _load instructions: 'fs_freq' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/home fs_freq' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_freq property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_freq property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/var/chroot/lenny-i386/home fs_freq
2010/11/19 16:59:56 _load: calling leaf loader on element fs_freq
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_passno=2' on node 'fs:/var/chroot/lenny-i386/home'
2010/11/19 16:59:56 _load instructions: 'fs_passno' <undef> <undef> '=' '2' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/home fs_passno' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_passno property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_passno property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/var/chroot/lenny-i386/home fs_passno
2010/11/19 16:59:56 _load: calling leaf loader on element fs_passno
2010/11/19 16:59:56 _load_leaf: action '=' value '2'
2010/11/19 16:59:56 _load_value: action '=' value '2' check yes
2010/11/19 16:59:56 value store 2, ok '1', check yes
2010/11/19 16:59:56 fs_type none options is bind
2010/11/19 16:59:56 Loading:bind=1
2010/11/19 16:59:56 fs:/var/chroot/lenny-i386/home fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ]
                       };
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: set fs_mntopts property level to hidden
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/var/chroot/lenny-i386/home fs_mntopts' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/var/chroot/lenny-i386/home fs_vfstype' with '- fs_vfstype' from object 'fs:/var/chroot/lenny-i386/home fs_mntopts'
2010/11/19 16:59:56 Config::Model::WarpedNode fs:/var/chroot/lenny-i386/home fs_mntopts is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/var/chroot/lenny-i386/home fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'none'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'auto''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'vfat''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext3''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'usbfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'davfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'iso9660''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext2''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'nfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'nfs4''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'none''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: true
2010/11/19 16:59:56 _do_warp found rule for '$f1 eq 'none'':
$found_rule = {
                'config_class_name' => 'Fstab::NoneOptions'
              };
2010/11/19 16:59:56 _do_warp: warp called from '$f1 eq 'none'' on 'fs:/var/chroot/lenny-i386/home fs_mntopts' with elements 'f1', warp rule is found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/var/chroot/lenny-i386/home fs_mntopts' with $found_rule = {
                'config_class_name' => 'Fstab::NoneOptions'
              };
2010/11/19 16:59:56 fs:/var/chroot/lenny-i386/home fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ],
                         'config_class_name' => 'Fstab::NoneOptions'
                       };
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_mntopts property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 New Fstab::NoneOptions requested by fs:/var/chroot/lenny-i386/home
2010/11/19 16:59:56 _load: called on node 'fs:/var/chroot/lenny-i386/home fs_mntopts'
2010/11/19 16:59:56 _load: Executing cmd 'bind=1' on node 'fs:/var/chroot/lenny-i386/home fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'bind' <undef> <undef> '=' '1' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/home fs_mntopts bind' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home fs_mntopts: reset bind property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/home fs_mntopts: reset bind property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element bind
2010/11/19 16:59:56 _load_leaf: action '=' value '1'
2010/11/19 16:59:56 _load_value: action '=' value '1' check yes
2010/11/19 16:59:56 value store 1, ok '1', check yes
2010/11/19 16:59:56 New Fstab::FsLine requested by Fstab
2010/11/19 16:59:56 Loading:fs_vfstype=none fs_spec=/tmp fs_file=/var/chroot/lenny-i386/tmp fs_freq=0 fs_passno=2
2010/11/19 16:59:56 _load: called on node 'fs:/var/chroot/lenny-i386/tmp'
2010/11/19 16:59:56 _load: Executing cmd 'fs_vfstype=none' on node 'fs:/var/chroot/lenny-i386/tmp'
2010/11/19 16:59:56 _load instructions: 'fs_vfstype' <undef> <undef> '=' 'none' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/tmp fs_vfstype' set_properties called with 'choice','help','mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_vfstype property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_vfstype property experience to beginner
2010/11/19 16:59:56 fs:/var/chroot/lenny-i386/tmp fs_vfstype setup_enum_choice with 'auto','davfs','ext2','ext3','swap','proc','iso9660','vfat','usbfs','ignore','nfs','nfs4','none','ignore'
2010/11/19 16:59:56 _load: calling leaf loader on element fs_vfstype
2010/11/19 16:59:56 _load_leaf: action '=' value 'none'
2010/11/19 16:59:56 _load_value: action '=' value 'none' check yes
2010/11/19 16:59:56 value store none, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_spec=/tmp' on node 'fs:/var/chroot/lenny-i386/tmp'
2010/11/19 16:59:56 _load instructions: 'fs_spec' <undef> <undef> '=' '/tmp' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/tmp fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_spec property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/var/chroot/lenny-i386/tmp fs_spec' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/var/chroot/lenny-i386/tmp fs_vfstype' with '- fs_vfstype' from object 'fs:/var/chroot/lenny-i386/tmp fs_spec'
2010/11/19 16:59:56 Config::Model::Value fs:/var/chroot/lenny-i386/tmp fs_spec is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/var/chroot/lenny-i386/tmp fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'none'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/var/chroot/lenny-i386/tmp fs_spec' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/var/chroot/lenny-i386/tmp fs_spec' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/tmp fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_spec property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_spec
2010/11/19 16:59:56 _load_leaf: action '=' value '/tmp'
2010/11/19 16:59:56 _load_value: action '=' value '/tmp' check yes
2010/11/19 16:59:56 value store /tmp, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_file=/var/chroot/lenny-i386/tmp' on node 'fs:/var/chroot/lenny-i386/tmp'
2010/11/19 16:59:56 _load instructions: 'fs_file' <undef> <undef> '=' '/var/chroot/lenny-i386/tmp' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/tmp fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_file property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/var/chroot/lenny-i386/tmp fs_file' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/var/chroot/lenny-i386/tmp fs_vfstype' with '- fs_vfstype' from object 'fs:/var/chroot/lenny-i386/tmp fs_file'
2010/11/19 16:59:56 Config::Model::Value fs:/var/chroot/lenny-i386/tmp fs_file is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/var/chroot/lenny-i386/tmp fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'none'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/var/chroot/lenny-i386/tmp fs_file' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/var/chroot/lenny-i386/tmp fs_file' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/tmp fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_file property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_file
2010/11/19 16:59:56 _load_leaf: action '=' value '/var/chroot/lenny-i386/tmp'
2010/11/19 16:59:56 _load_value: action '=' value '/var/chroot/lenny-i386/tmp' check yes
2010/11/19 16:59:56 value store /var/chroot/lenny-i386/tmp, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_freq=0' on node 'fs:/var/chroot/lenny-i386/tmp'
2010/11/19 16:59:56 _load instructions: 'fs_freq' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/tmp fs_freq' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_freq property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_freq property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/var/chroot/lenny-i386/tmp fs_freq
2010/11/19 16:59:56 _load: calling leaf loader on element fs_freq
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_passno=2' on node 'fs:/var/chroot/lenny-i386/tmp'
2010/11/19 16:59:56 _load instructions: 'fs_passno' <undef> <undef> '=' '2' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/tmp fs_passno' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_passno property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_passno property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/var/chroot/lenny-i386/tmp fs_passno
2010/11/19 16:59:56 _load: calling leaf loader on element fs_passno
2010/11/19 16:59:56 _load_leaf: action '=' value '2'
2010/11/19 16:59:56 _load_value: action '=' value '2' check yes
2010/11/19 16:59:56 value store 2, ok '1', check yes
2010/11/19 16:59:56 fs_type none options is bind
2010/11/19 16:59:56 Loading:bind=1
2010/11/19 16:59:56 fs:/var/chroot/lenny-i386/tmp fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ]
                       };
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: set fs_mntopts property level to hidden
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/var/chroot/lenny-i386/tmp fs_mntopts' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/var/chroot/lenny-i386/tmp fs_vfstype' with '- fs_vfstype' from object 'fs:/var/chroot/lenny-i386/tmp fs_mntopts'
2010/11/19 16:59:56 Config::Model::WarpedNode fs:/var/chroot/lenny-i386/tmp fs_mntopts is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/var/chroot/lenny-i386/tmp fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'none'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'auto''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'vfat''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext3''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'usbfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'davfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'iso9660''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext2''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'nfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'nfs4''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'none''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: true
2010/11/19 16:59:56 _do_warp found rule for '$f1 eq 'none'':
$found_rule = {
                'config_class_name' => 'Fstab::NoneOptions'
              };
2010/11/19 16:59:56 _do_warp: warp called from '$f1 eq 'none'' on 'fs:/var/chroot/lenny-i386/tmp fs_mntopts' with elements 'f1', warp rule is found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/var/chroot/lenny-i386/tmp fs_mntopts' with $found_rule = {
                'config_class_name' => 'Fstab::NoneOptions'
              };
2010/11/19 16:59:56 fs:/var/chroot/lenny-i386/tmp fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ],
                         'config_class_name' => 'Fstab::NoneOptions'
                       };
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_mntopts property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 New Fstab::NoneOptions requested by fs:/var/chroot/lenny-i386/tmp
2010/11/19 16:59:56 _load: called on node 'fs:/var/chroot/lenny-i386/tmp fs_mntopts'
2010/11/19 16:59:56 _load: Executing cmd 'bind=1' on node 'fs:/var/chroot/lenny-i386/tmp fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'bind' <undef> <undef> '=' '1' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/tmp fs_mntopts bind' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp fs_mntopts: reset bind property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/tmp fs_mntopts: reset bind property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element bind
2010/11/19 16:59:56 _load_leaf: action '=' value '1'
2010/11/19 16:59:56 _load_value: action '=' value '1' check yes
2010/11/19 16:59:56 value store 1, ok '1', check yes
2010/11/19 16:59:56 New Fstab::FsLine requested by Fstab
2010/11/19 16:59:56 Loading:fs_vfstype=none fs_spec=/proc fs_file=/var/chroot/lenny-i386/proc fs_freq=0 fs_passno=2
2010/11/19 16:59:56 _load: called on node 'fs:/var/chroot/lenny-i386/proc'
2010/11/19 16:59:56 _load: Executing cmd 'fs_vfstype=none' on node 'fs:/var/chroot/lenny-i386/proc'
2010/11/19 16:59:56 _load instructions: 'fs_vfstype' <undef> <undef> '=' 'none' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/proc fs_vfstype' set_properties called with 'choice','help','mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_vfstype property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_vfstype property experience to beginner
2010/11/19 16:59:56 fs:/var/chroot/lenny-i386/proc fs_vfstype setup_enum_choice with 'auto','davfs','ext2','ext3','swap','proc','iso9660','vfat','usbfs','ignore','nfs','nfs4','none','ignore'
2010/11/19 16:59:56 _load: calling leaf loader on element fs_vfstype
2010/11/19 16:59:56 _load_leaf: action '=' value 'none'
2010/11/19 16:59:56 _load_value: action '=' value 'none' check yes
2010/11/19 16:59:56 value store none, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_spec=/proc' on node 'fs:/var/chroot/lenny-i386/proc'
2010/11/19 16:59:56 _load instructions: 'fs_spec' <undef> <undef> '=' '/proc' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/proc fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_spec property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/var/chroot/lenny-i386/proc fs_spec' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/var/chroot/lenny-i386/proc fs_vfstype' with '- fs_vfstype' from object 'fs:/var/chroot/lenny-i386/proc fs_spec'
2010/11/19 16:59:56 Config::Model::Value fs:/var/chroot/lenny-i386/proc fs_spec is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/var/chroot/lenny-i386/proc fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'none'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/var/chroot/lenny-i386/proc fs_spec' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/var/chroot/lenny-i386/proc fs_spec' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/proc fs_spec' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_spec property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_spec property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_spec
2010/11/19 16:59:56 _load_leaf: action '=' value '/proc'
2010/11/19 16:59:56 _load_value: action '=' value '/proc' check yes
2010/11/19 16:59:56 value store /proc, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_file=/var/chroot/lenny-i386/proc' on node 'fs:/var/chroot/lenny-i386/proc'
2010/11/19 16:59:56 _load instructions: 'fs_file' <undef> <undef> '=' '/var/chroot/lenny-i386/proc' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/proc fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_file property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/var/chroot/lenny-i386/proc fs_file' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/var/chroot/lenny-i386/proc fs_vfstype' with '- fs_vfstype' from object 'fs:/var/chroot/lenny-i386/proc fs_file'
2010/11/19 16:59:56 Config::Model::Value fs:/var/chroot/lenny-i386/proc fs_file is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/var/chroot/lenny-i386/proc fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'none'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 _do_warp: warp called from '' on 'fs:/var/chroot/lenny-i386/proc fs_file' with elements 'f1', warp rule is not found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/var/chroot/lenny-i386/proc fs_file' with $found_rule = {};
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/proc fs_file' set_properties called with 'mandatory','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_file property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_file property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element fs_file
2010/11/19 16:59:56 _load_leaf: action '=' value '/var/chroot/lenny-i386/proc'
2010/11/19 16:59:56 _load_value: action '=' value '/var/chroot/lenny-i386/proc' check yes
2010/11/19 16:59:56 value store /var/chroot/lenny-i386/proc, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_freq=0' on node 'fs:/var/chroot/lenny-i386/proc'
2010/11/19 16:59:56 _load instructions: 'fs_freq' <undef> <undef> '=' '0' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/proc fs_freq' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_freq property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_freq property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/var/chroot/lenny-i386/proc fs_freq
2010/11/19 16:59:56 _load: calling leaf loader on element fs_freq
2010/11/19 16:59:56 _load_leaf: action '=' value '0'
2010/11/19 16:59:56 _load_value: action '=' value '0' check yes
2010/11/19 16:59:56 value store 0, ok '1', check yes
2010/11/19 16:59:56 _load: Executing cmd 'fs_passno=2' on node 'fs:/var/chroot/lenny-i386/proc'
2010/11/19 16:59:56 _load instructions: 'fs_passno' <undef> <undef> '=' '2' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/proc fs_passno' set_properties called with 'default','value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_passno property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_passno property experience to beginner
2010/11/19 16:59:56 Set default value for fs:/var/chroot/lenny-i386/proc fs_passno
2010/11/19 16:59:56 _load: calling leaf loader on element fs_passno
2010/11/19 16:59:56 _load_leaf: action '=' value '2'
2010/11/19 16:59:56 _load_value: action '=' value '2' check yes
2010/11/19 16:59:56 value store 2, ok '1', check yes
2010/11/19 16:59:56 fs_type none options is bind
2010/11/19 16:59:56 Loading:bind=1
2010/11/19 16:59:56 fs:/var/chroot/lenny-i386/proc fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ]
                       };
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: set fs_mntopts property level to hidden
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 Retrieving master object from 'fs:/var/chroot/lenny-i386/proc fs_mntopts' with path '- fs_vfstype'
2010/11/19 16:59:56 Found master object 'fs:/var/chroot/lenny-i386/proc fs_vfstype' with '- fs_vfstype' from object 'fs:/var/chroot/lenny-i386/proc fs_mntopts'
2010/11/19 16:59:56 Config::Model::WarpedNode fs:/var/chroot/lenny-i386/proc fs_mntopts is warped by f1 => '- fs_vfstype'
,	f1 (- fs_vfstype) location in tree is: 'fs:/var/chroot/lenny-i386/proc fs_vfstype'
2010/11/19 16:59:56 	'f1' value is: 'none'
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'proc''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'auto''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'vfat''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'swap''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext3''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'usbfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'davfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'iso9660''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'ext2''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'nfs''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'nfs4''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: false
2010/11/19 16:59:56 compute_bool: called for '$f1 eq 'none''
2010/11/19 16:59:56 compute_bool: data:
$data = {
          'f1' => 'none'
        };
2010/11/19 16:59:56 compute_bool: eval result: true
2010/11/19 16:59:56 _do_warp found rule for '$f1 eq 'none'':
$found_rule = {
                'config_class_name' => 'Fstab::NoneOptions'
              };
2010/11/19 16:59:56 _do_warp: warp called from '$f1 eq 'none'' on 'fs:/var/chroot/lenny-i386/proc fs_mntopts' with elements 'f1', warp rule is found
2010/11/19 16:59:56 warp_them: call set_properties on 'fs:/var/chroot/lenny-i386/proc fs_mntopts' with $found_rule = {
                'config_class_name' => 'Fstab::NoneOptions'
              };
2010/11/19 16:59:56 fs:/var/chroot/lenny-i386/proc fs_mntopts set_properties called with $set_properties_args = {
                         'follow' => {
                                       'f1' => '- fs_vfstype'
                                     },
                         'type' => 'warped_node',
                         'rules' => [
                                      '$f1 eq \'proc\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'auto\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'vfat\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'swap\'',
                                      {
                                        'config_class_name' => 'Fstab::SwapOptions'
                                      },
                                      '$f1 eq \'ext3\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext3FsOpt'
                                      },
                                      '$f1 eq \'usbfs\'',
                                      {
                                        'config_class_name' => 'Fstab::UsbFsOptions'
                                      },
                                      '$f1 eq \'davfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'iso9660\'',
                                      {
                                        'config_class_name' => 'Fstab::Iso9660_Opt'
                                      },
                                      '$f1 eq \'ext2\'',
                                      {
                                        'config_class_name' => 'Fstab::Ext2FsOpt'
                                      },
                                      '$f1 eq \'nfs\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'nfs4\'',
                                      {
                                        'config_class_name' => 'Fstab::CommonOptions'
                                      },
                                      '$f1 eq \'none\'',
                                      {
                                        'config_class_name' => 'Fstab::NoneOptions'
                                      }
                                    ],
                         'config_class_name' => 'Fstab::NoneOptions'
                       };
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_mntopts property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc: reset fs_mntopts property experience to beginner
2010/11/19 16:59:56 New Fstab::NoneOptions requested by fs:/var/chroot/lenny-i386/proc
2010/11/19 16:59:56 _load: called on node 'fs:/var/chroot/lenny-i386/proc fs_mntopts'
2010/11/19 16:59:56 _load: Executing cmd 'bind=1' on node 'fs:/var/chroot/lenny-i386/proc fs_mntopts'
2010/11/19 16:59:56 _load instructions: 'bind' <undef> <undef> '=' '1' <undef>
2010/11/19 16:59:56 Leaf 'fs:/var/chroot/lenny-i386/proc fs_mntopts bind' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc fs_mntopts: reset bind property level to normal
2010/11/19 16:59:56 Node fs:/var/chroot/lenny-i386/proc fs_mntopts: reset bind property experience to beginner
2010/11/19 16:59:56 _load: calling leaf loader on element bind
2010/11/19 16:59:56 _load_leaf: action '=' value '1'
2010/11/19 16:59:56 _load_value: action '=' value '1' check yes
2010/11/19 16:59:56 value store 1, ok '1', check yes
2010/11/19 16:59:56 init: registering write cb (Fstab) for Fstab
2010/11/19 16:59:56 get_element_name: got fs for level master
2010/11/19 16:59:56 get_element_name: got fs_spec fs_vfstype fs_file fs_mntopts fs_freq fs_passno for level master
2010/11/19 16:59:56 Leaf 'fs:/ fs_mntopts async' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset async property level to normal
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset async property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/ fs_mntopts atime' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset atime property level to normal
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset atime property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/ fs_mntopts auto' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset auto property level to normal
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset auto property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/ fs_mntopts dev' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset dev property level to normal
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset dev property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/ fs_mntopts exec' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset exec property level to normal
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset exec property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/ fs_mntopts group' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset group property level to normal
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset group property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/ fs_mntopts mand' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset mand property level to normal
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset mand property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/ fs_mntopts user' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset user property level to normal
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset user property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/ fs_mntopts defaults' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset defaults property level to normal
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset defaults property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/ fs_mntopts rw' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset rw property level to normal
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset rw property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/ fs_mntopts acl' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset acl property level to normal
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset acl property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/ fs_mntopts user_xattr' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset user_xattr property level to normal
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset user_xattr property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/ fs_mntopts statfs_behavior' set_properties called with 'choice','value_type'
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset statfs_behavior property level to normal
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset statfs_behavior property experience to beginner
2010/11/19 16:59:56 fs:/ fs_mntopts statfs_behavior setup_enum_choice with 'bsddf','minixdf'
2010/11/19 16:59:56 Leaf 'fs:/ fs_mntopts journalling_mode' set_properties called with 'choice','help','value_type'
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset journalling_mode property level to normal
2010/11/19 16:59:56 Node fs:/ fs_mntopts: reset journalling_mode property experience to beginner
2010/11/19 16:59:56 fs:/ fs_mntopts journalling_mode setup_enum_choice with 'journal','ordered','writeback'
2010/11/19 16:59:56 get_element_name: got async atime auto dev exec group mand user defaults rw acl user_xattr statfs_behavior errors journalling_mode for level master
2010/11/19 16:59:56 get_element_name: got fs_spec fs_vfstype fs_file fs_mntopts fs_freq fs_passno for level master
2010/11/19 16:59:56 Leaf 'fs:/home fs_mntopts async' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset async property level to normal
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset async property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/home fs_mntopts atime' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset atime property level to normal
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset atime property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/home fs_mntopts auto' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset auto property level to normal
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset auto property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/home fs_mntopts dev' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset dev property level to normal
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset dev property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/home fs_mntopts exec' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset exec property level to normal
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset exec property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/home fs_mntopts group' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset group property level to normal
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset group property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/home fs_mntopts mand' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset mand property level to normal
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset mand property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/home fs_mntopts user' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset user property level to normal
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset user property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/home fs_mntopts rw' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset rw property level to normal
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset rw property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/home fs_mntopts acl' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset acl property level to normal
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset acl property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/home fs_mntopts user_xattr' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset user_xattr property level to normal
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset user_xattr property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/home fs_mntopts statfs_behavior' set_properties called with 'choice','value_type'
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset statfs_behavior property level to normal
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset statfs_behavior property experience to beginner
2010/11/19 16:59:56 fs:/home fs_mntopts statfs_behavior setup_enum_choice with 'bsddf','minixdf'
2010/11/19 16:59:56 Leaf 'fs:/home fs_mntopts errors' set_properties called with 'choice','value_type'
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset errors property level to normal
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset errors property experience to beginner
2010/11/19 16:59:56 fs:/home fs_mntopts errors setup_enum_choice with 'continue','remount-ro','panic'
2010/11/19 16:59:56 Leaf 'fs:/home fs_mntopts journalling_mode' set_properties called with 'choice','help','value_type'
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset journalling_mode property level to normal
2010/11/19 16:59:56 Node fs:/home fs_mntopts: reset journalling_mode property experience to beginner
2010/11/19 16:59:56 fs:/home fs_mntopts journalling_mode setup_enum_choice with 'journal','ordered','writeback'
2010/11/19 16:59:56 get_element_name: got async atime auto dev exec group mand user defaults rw acl user_xattr statfs_behavior errors journalling_mode for level master
2010/11/19 16:59:56 get_element_name: got fs_spec fs_vfstype fs_file fs_mntopts fs_freq fs_passno for level master
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_mntopts async' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset async property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset async property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_mntopts atime' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset atime property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset atime property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_mntopts dev' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset dev property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset dev property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_mntopts exec' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset exec property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset exec property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_mntopts group' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset group property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset group property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_mntopts mand' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset mand property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset mand property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/gandalf-home fs_mntopts defaults' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset defaults property level to normal
2010/11/19 16:59:56 Node fs:/mnt/gandalf-home fs_mntopts: reset defaults property experience to beginner
2010/11/19 16:59:56 get_element_name: got async atime auto dev exec group mand user defaults rw for level master
2010/11/19 16:59:56 get_element_name: got fs_spec fs_vfstype fs_file fs_mntopts fs_freq fs_passno for level master
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_mntopts async' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset async property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset async property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_mntopts atime' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset atime property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset atime property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_mntopts dev' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset dev property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset dev property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_mntopts exec' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset exec property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset exec property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_mntopts group' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset group property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset group property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_mntopts mand' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset mand property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset mand property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video fs_mntopts defaults' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset defaults property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video fs_mntopts: reset defaults property experience to beginner
2010/11/19 16:59:56 get_element_name: got async atime auto dev exec group mand user defaults rw for level master
2010/11/19 16:59:56 get_element_name: got fs_spec fs_vfstype fs_file fs_mntopts fs_freq fs_passno for level master
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_mntopts async' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset async property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset async property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_mntopts atime' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset atime property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset atime property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_mntopts dev' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset dev property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset dev property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_mntopts exec' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset exec property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset exec property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_mntopts group' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset group property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset group property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_mntopts mand' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset mand property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset mand property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video3 fs_mntopts defaults' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset defaults property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video3 fs_mntopts: reset defaults property experience to beginner
2010/11/19 16:59:56 get_element_name: got async atime auto dev exec group mand user defaults rw for level master
2010/11/19 16:59:56 get_element_name: got fs_spec fs_vfstype fs_file fs_mntopts fs_freq fs_passno for level master
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_mntopts async' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset async property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset async property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_mntopts atime' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset atime property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset atime property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_mntopts dev' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset dev property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset dev property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_mntopts exec' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset exec property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset exec property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_mntopts group' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset group property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset group property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_mntopts mand' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset mand property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset mand property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/mnt/video4 fs_mntopts defaults' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset defaults property level to normal
2010/11/19 16:59:56 Node fs:/mnt/video4 fs_mntopts: reset defaults property experience to beginner
2010/11/19 16:59:56 get_element_name: got async atime auto dev exec group mand user defaults rw for level master
2010/11/19 16:59:56 get_element_name: got fs_spec fs_vfstype fs_file fs_mntopts fs_freq fs_passno for level master
2010/11/19 16:59:56 Leaf 'fs:/proc fs_mntopts async' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset async property level to normal
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset async property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/proc fs_mntopts atime' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset atime property level to normal
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset atime property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/proc fs_mntopts auto' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset auto property level to normal
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset auto property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/proc fs_mntopts dev' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset dev property level to normal
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset dev property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/proc fs_mntopts exec' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset exec property level to normal
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset exec property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/proc fs_mntopts group' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset group property level to normal
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset group property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/proc fs_mntopts mand' set_properties called with 'value_type'
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset mand property level to normal
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset mand property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/proc fs_mntopts user' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset user property level to normal
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset user property experience to beginner
2010/11/19 16:59:56 Leaf 'fs:/proc fs_mntopts rw' set_properties called with 'help','value_type'
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset rw property level to normal
2010/11/19 16:59:56 Node fs:/proc fs_mntopts: reset rw property experience to beginner
2010/11/19 16:59:56 get_element_name: got async atime auto dev exec group mand user defaults rw for level master
2010/11/19 16:59:56 get_element_name: got fs_spec fs_vfstype fs_file fs_mntopts fs_freq fs_passno for level master
2010/11/19 16:59:56 get_element_name: got bind for level master
2010/11/19 16:59:56 get_element_name: got fs_spec fs_vfstype fs_file fs_mntopts fs_freq fs_passno for level master
2010/11/19 16:59:56 get_element_name: got bind for level master
2010/11/19 16:59:56 get_element_name: got fs_spec fs_vfstype fs_file fs_mntopts fs_freq fs_passno for level master
2010/11/19 16:59:56 get_element_name: got bind for level master
2010/11/19 16:59:56 get_element_name: got fs_spec fs_vfstype fs_file fs_mntopts fs_freq fs_passno for level master
2010/11/19 16:59:56 get_element_name: got bind for level master
2010/11/19 16:59:56 get_element_name: got fs_spec fs_vfstype fs_file fs_mntopts fs_freq fs_passno for level master
2010/11/19 16:59:56 get_element_name: got sw for level master
2010/11/19 16:59:56 Fstab backend opened file wr_root/test-0/etc/fstab to write
2010/11/19 16:59:56 get_element_name: got fs for level master
2010/11/19 16:59:56 Error during write, restoring backup in wr_root/test-0/etc/fstab with 21 lines
In function grab: wrong element type for element 'fs'
	got type 'hash', expected 'leaf' requested with step 'fs'
# Looks like you planned 67 tests but ran 6.
# Looks like your test exited with 25 just after 6.
